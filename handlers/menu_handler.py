from telegram import Update
from telegram.ext import ContextTypes

from handlers.basehandler import BaseHandler
from keyboards import get_food_keyboard, get_main_keyboard, get_burger_buttons
from database.models import Product
from service import add_to_cart, get_user_cart, create_new_cart
from typing import Callable
import logging

logger = logging.getLogger(__name__)


class MenuHandler(BaseHandler):

    async def _handle_error(self, update: Update, context: ContextTypes.DEFAULT_TYPE, error: Exception):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤ –º–µ–Ω—é"""
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    def register_menu_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é"""
        from keyboards import (
            burger_btn_txt, fries_btn_txt, drink_btn_txt,
            back_btn_txt
        )

        self.register_handler(burger_btn_txt, handle_burger)
        self.register_handler(fries_btn_txt, handle_fries)
        self.register_handler(drink_btn_txt, handle_drink)
        self.register_handler(back_btn_txt, handle_back_to_main)
        self.register_fallback(handle_unknown_menu_command)


menu_handler = MenuHandler()




# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏ –µ–¥—ã
async def handle_burger(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ë—É—Ä–≥–µ—Ä"""
    user_id = update.effective_user.id
    add_to_cart(user_id, "burger", 300)
    await update.message.reply_text(
        "üçî –ë—É—Ä–≥–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!",
        reply_markup=get_food_keyboard()
    )


async def handle_fries(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ü–∏—Ü—Ü–∞"""
    user_id = update.effective_user.id
    add_to_cart(user_id, "pizza", 450)
    await update.message.reply_text(
        "üçï –ü–∏—Ü—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É!",
        reply_markup=get_food_keyboard()
    )


async def handle_drink(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –°–∞–ª–∞—Ç"""
    user_id = update.effective_user.id
    add_to_cart(user_id, "salad", 200)
    await update.message.reply_text(
        "ü•ó –°–∞–ª–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!",
        reply_markup=get_food_keyboard()
    )


async def handle_back_to_main(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ (–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)"""
    from keyboards import get_main_keyboard
    await update.message.reply_text(
        text="–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è",
        reply_markup=get_main_keyboard()
    )


async def handle_unknown_menu_command(update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é"""
    await update.message.reply_text(
        "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤ –º–µ–Ω—é",
        reply_markup=get_food_keyboard()
    )